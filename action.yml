name: Mirror Repo (push)

description: Mirror a repository using a push pattern (via SSH)

inputs:
  destinationRepo:
    required: true
    type: string
    description: |
      The repo that is being copied TO (e.g. NewOrg/my-repo).
  destinationSSHKey:
    required: true
    type: string
    description: |
      Private SSH key with write access to destination repo.
  mirrorTags:
    required: false
    type: boolean
    default: false
    description: |
      control whether tags should be mirrored

runs:

  using: "composite"

  steps:
    - name: echo stuff
      shell: bash
      run: |
        echo ${{ github.ref }}
        echo ${{ github.event_name }}
        echo ${{ github.ref_type }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up remote
      env:
        SSH_KEY: ${{ inputs.destinationSSHKey }} # handle whitespace
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "$SSH_KEY"
        git remote add destinationRemote "git@github.com:${{inputs.destinationRepo}}.git"
      shell: bash

    # This approach ensures that we only ever touch branches that are
    # first touched in the source repository (i.e. this will not delete
    # branches created in the destination repository).

    - name: Push branch
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock # necessary to access to key
      run: git push --force destinationRemote $(git branch show-current)
      if: github.event_name == 'push' && github.ref_type == 'branch'
      shell: bash

    - name: Push tag
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock # necessary to access to key
      run: git push --force destinationRemote ${{ github.ref }}
      if: inputs.mirrorTags && github.event_name == 'push' && github.ref_type == 'tag'
      shell: bash

    - name: Delete branch
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock # necessary to access to key
      run: git push destinationRemote :$(git branch show-current)
      if: github.event_name == 'delete' && github.ref_type == 'branch'
      shell: bash

    - name: Delete tag
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock # necessary to access to key
      run: git push destinationRemote --delete ${{ github.ref }}
      if: inputs.mirrorTags && github.event_name == 'delete' && github.ref_type == 'tag'
      shell: bash
